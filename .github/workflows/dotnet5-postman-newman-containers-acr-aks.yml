name: dotnet5-newman-containers-acr-appservice

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGEM_AZURECR: ${{ secrets.AZURECR_REGISTRY }}/apifinancas-newman
  CAMINHO_PROJETO_WEBAPP: ./APIFinancas
  CAMINHO_TESTES: ./Tests

jobs:
  build-tests-push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
      
    - name: Build de imagem
      run: |
        cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
        docker build . --file Dockerfile --tag ${{ env.IMAGEM_AZURECR }}:latest
        
    - name: Criação de container para testes com a API
      run: |
        docker run --name api-testes -p 1234:80 -d ${{ env.IMAGEM_AZURECR }}:latest
        docker container ls

    - name: Configurar manifesto de Deployment
      run: |
        sed -i 's/5000/1234/' '{{ env.CAMINHO_TESTES }}/CalculoJurosCompostos.postman_collection.json'

    - name: Testes da API REST com Newman
      run: |
        cd ${{ env.CAMINHO_TESTES }}
        echo "** Versão Global do Newman **"
        newman -v
        newman run CalculoJurosCompostos.postman_collection.json -d data-tests.json

    - name: Geração de relatório HTML com os resultados do Newman
      if: always()
      run: |
        cd ${{ env.CAMINHO_TESTES }}
        npm install newman@5.1.2
        echo "** Versão Global do Newman **"
        newman -v
        echo "** Versão Local do Newman **"
        npx newman -v
        npm install newman-reporter-htmlextra@1.20.4
        npx newman run CalculoJurosCompostos.postman_collection.json -d data-tests.json -r htmlextra

    - name: Upload como Artifact do Report com resultado dos testes (Postman + Newman)
      uses: actions/upload-artifact@v2.2.3
      env:
        CAMINHO_RESULTADO_TESTES: ${{ env.CAMINHO_TESTES }}/newman/
      if: always()
      with:
        name: resultado-testes
        path: ${{ env.CAMINHO_RESULTADO_TESTES }}
        retention-days: 30
        
    - name: Login no Azure Container Registry
      uses: docker/login-action@v1.9.0
      with:
        registry: ${{ secrets.AZURECR_REGISTRY }}
        username: ${{ secrets.AZURECR_USERNAME }}
        password: ${{ secrets.AZURECR_PASSWORD }}

    - name: Geração de tag com número do Build e Push no Azure Container Registry
      run: |
        docker tag ${{ env.IMAGEM_AZURECR }}:latest ${{ env.IMAGEM_AZURECR }}:$GITHUB_RUN_NUMBER
        docker push --all-tags ${{ env.IMAGEM_AZURECR }}
